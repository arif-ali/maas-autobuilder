external_vlan=1

qemu_password="SgUoBByKjG9Lj78SwfWAHXD8DvgE67Cu"

virsh_user="virsh"

storage_path="/var/lib/libvirt/maas-images"

# Node prefix for all the nodes except for juju
compute="maas-node"

# To enable or disable uEFI for VMs
enable_uefi="true"

# To enable secureboot for VMs
# This in-advertantly enables uEFI
# EXPERIMENTAL/TESTING
enable_secureboot="false"

# Juju node count and definition
juju_count=1
juju_cpus=1
juju_ram=4096
juju_disk=20

# Control node count and definition
control_count=1
control_cpus=3
control_ram=8192

# Compute node definition
node_start=1
node_cpus=2
node_ram=4096

# Dynamically generate the node count
# The amount of memory add on 10% then divide by node_ram then add 1
# For a 32GB machine we'll get 10 VMs altogether
# 1 x 4GB juju, 1 x 8GB controler, 8 x 4GB compute
# The juju VM is not included in the count
node_count=$(( `cat /proc/meminfo | grep -i memtotal | awk '{print $2}'` * 11 / 10 / 1024 / $node_ram + 1 ))

# Disks to create on each VM
disks=()
disks+=(50)
disks+=(20)
disks+=(20)

# The network type, you have to options, bridge and network
# Bridge, will then assign each interface to the bridged identified in
# the bridges array.
# Network, will assign each interface to the virsh network that has been
# defined in the networks array.
network_type=bridge

# The vlans for each of the bridges if that is defined.
vlans=()
vlans+=(300)
vlans+=(301)
vlans+=(302)
vlans+=(303)
vlans+=(304)
vlans+=(305)
vlans+=(1)

# The bridges by default that will be used
bridges=()
bridges+=("br0")
bridges+=("br1")
bridges+=("br2")
bridges+=("br3")
bridges+=("br4")
bridges+=("br5")
bridges+=("br6")
